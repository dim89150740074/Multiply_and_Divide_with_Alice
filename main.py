from flask import Flask, request, jsonify
import random
import os
from datetime import date

app = Flask(__name__)


# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏
def write_to_file(text="–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: 0 | –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: 0"):
    today = date.today()
    with open(f"{today}.txt", "w+") as my_file:
        my_file.write(text)


def get_data_from_file():
    today = date.today()
    if not os.path.isfile(f"{today}.txt"):
        write_to_file()
    with open(f"{today}.txt", "r") as my_file:
        res_list = my_file.readline().split(" | ")
    return res_list


def write_data_to_file(true_or_false):
    user_res = get_data_from_file()
    if true_or_false:
        total = int(user_res[0].split(": ")[1]) + 1
        res = f"–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: {total} | {user_res[1]}"
    else:
        total = int(user_res[1].split(": ")[1]) + 1
        res = f"{user_res[0]} | –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: {total}"
    write_to_file(res)


# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–¥–∞—á–∏
def generate_example():
    x = random.randint(3, 9)
    y = random.randint(3, 9)
    type_example = random.randint(1, 2)
    if type_example == 1:
        example = f"{x} * {y} = ?"
        right_answer = x * y
    else:
        res = x * y
        example = f"{res} / {y} = ?"
        right_answer = res / y
    return example, right_answer


user_answers = {}


@app.route('/alice', methods=['POST'])
def alice_skill():
    req = request.json
    user_id = req['session']['user_id']
    command = req['request']['command'].lower()

    if command == '—Å—Ç–∞—Ä—Ç' or command == 'start':
        response_text = "–ü—Ä–∏–≤–µ—Ç! –°–∫–∞–∂–∏ '–∑–∞–¥–∞—á–∞', —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞—á—É –Ω–∞ —É–º–Ω–æ–∂–µ–Ω–∏–µ –∏–ª–∏ –¥–µ–ª–µ–Ω–∏–µ."
    elif command == '–∑–∞–¥–∞—á–∞' or command == 'task':
        example, right_answer = generate_example()
        user_answers[user_id] = right_answer
        response_text = example
    elif command == '—Ä–µ–∑—É–ª—å—Ç–∞—Ç' or command == 'result':
        res_list = get_data_from_file()
        response_text = f"‚ÑπÔ∏è –°–µ–≥–æ–¥–Ω—è:\n{res_list[0]}\n{res_list[1]}\n\n–°–∫–∞–∂–∏ '–∑–∞–¥–∞—á–∞', —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å."
    elif command.isdigit():
        user_answer = int(command)
        right_answer = user_answers.get(user_id)

        if right_answer is None:
            response_text = "–°–∫–∞–∂–∏ '–∑–∞–¥–∞—á–∞', —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞—á—É."
        elif user_answer == right_answer:
            response_text = f"üèÜ –ú–æ–ª–æ–¥–µ—Ü! –≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!\n\n–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ —Å–µ–≥–æ–¥–Ω—è, —Å–∫–∞–∂–∏ '—Ä–µ–∑—É–ª—å—Ç–∞—Ç'."
            write_data_to_file(True)
        else:
            response_text = f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {int(right_answer)}\n\n–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ —Å–µ–≥–æ–¥–Ω—è, —Å–∫–∞–∂–∏ '—Ä–µ–∑—É–ª—å—Ç–∞—Ç'."
            write_data_to_file(False)

        # –£–¥–∞–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
        user_answers.pop(user_id, None)
        example, right_answer = generate_example()
        user_answers[user_id] = right_answer
        response_text += f"\n\n–í–æ—Ç –Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞: {example}"
    else:
        response_text = "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç–æ—Ç –∑–∞–ø—Ä–æ—Å. –°–∫–∞–∂–∏ '–∑–∞–¥–∞—á–∞', —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞—á—É."

    res = {
        "version": req['version'],
        "session": req['session'],
        "response": {
            "text": response_text,
            "end_session": False
        }
    }
    return jsonify(res)


if __name__ == '__main__':
    app.run(port=5000)
